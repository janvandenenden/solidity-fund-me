{
  "address": "0xc90cA800ea3541c26A34b2F5A1bCdf2E07e474c0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x21fd66bb5c74ec4ba899aaba8ddbee164b8b22598b7e0c10fbb20f4eceb14315",
  "receipt": {
    "to": null,
    "from": "0x540E0B2cC80ABE6f5a3d9512B4C05C17771e51C7",
    "contractAddress": "0xc90cA800ea3541c26A34b2F5A1bCdf2E07e474c0",
    "transactionIndex": 9,
    "gasUsed": "1016282",
    "logsBloom": "0x
    "blockHash": "0x87f6809d1a5b9d4538f50071122e379f81e936a82c240980506da4023ec72817",
    "transactionHash": "0x21fd66bb5c74ec4ba899aaba8ddbee164b8b22598b7e0c10fbb20f4eceb14315",
    "logs": [],
    "blockNumber": 11217069,
    "cumulativeGasUsed": "9641331",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 2,
  "solcInputHash": "d0062808576473f27408bc6df8488483",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n//get funds from user\\n// withdraw funds from contract, owner only\\n// set a minimum funding value in USD\\n\\n//962864\\n//940405 gas saved with applying constant\\n//913386 gas saved with applying immutable\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n// /** @title A contract for crowdfunding\\n//  * @author Jan\\n//  * @notice This contract is a sample funding contract\\n//  * @dev Adds pricefeed as our pricefeed\\n//  * @return what it returns, i.e. for a function\\n//  * @param specify what parameters should be functions\\n//  */\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n\\n\\n//state variable for optimizing gas\\n\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n\\n    address private immutable i_owner;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner{\\n        // require(msg.sender == i_owner, \\\"sender is not owner\\\");\\n        if(msg.sender != i_owner) {revert FundMe__NotOwner();}\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress){\\n        //msg.sender is whoever deploys the contract\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    } \\n\\n    fallback() external payable {\\n        fund();\\n    } \\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"didn't send enough\\\");\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for(uint256 funderIndex = 0;funderIndex < s_funders.length ;funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        //resetting an array with with 0 objects\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{value:address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        //mappings can't be in memory\\n        for(uint256 funderIndex = 0;funderIndex < funders.length ;funderIndex++){\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n           s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{value:address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed\\\");\\n    }\\n function getOwner() public view returns(address){\\n    return i_owner;\\n }   \\n function getFunder(uint256 index)public view returns(address){\\n     return s_funders[index];\\n }\\n function getAddressToAmountFunded(address funder) public view returns(uint256){\\n    return s_addressToAmountFunded[funder];\\n }\\n function getPriceFeed() public view returns(AggregatorV3Interface){\\n     return s_priceFeed;\\n }\\n}\\n\",\"keccak256\":\"0x9e4a59c1d295bd3a13012a01af569cc7901733a761c82056159c6a7c3abbde11\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256){\\n        // we need the ABI and address\\n        //address 0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        (,int256 price,,,) = priceFeed.latestRoundData();\\n\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns(uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethPriceInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethPriceInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xa15c7651d587e75c63830a5a0b76c4eb16565eb3e2fe0ddba1a2a9420fc091bd\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200128438038062001284833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6111056200017f600039600081816103250152818161057401526105c401526111056000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a93565b6102da565b6040516100cc9190610ad9565b60405180910390f35b6100dd610323565b005b3480156100eb57600080fd5b506100f4610563565b6040516101019190610ad9565b60405180910390f35b34801561011657600080fd5b5061011f610570565b60405161012c9190610b03565b60405180910390f35b34801561014157600080fd5b5061014a610598565b6040516101579190610b7d565b60405180910390f35b6101686101b1565b005b6101726105c2565b005b34801561018057600080fd5b5061019b60048036038101906101969190610bc4565b610866565b6040516101a89190610b03565b60405180910390f35b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108ad90919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c4e565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a8576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104535760008082815481106103cd576103cc610c6e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061044b90610ccc565b9150506103ab565b50600067ffffffffffffffff81111561046f5761046e610d15565b5b60405190808252806020026020018201604052801561049d5781602001602082028036833780820191505090505b50600090805190602001906104b3929190610989565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104da90610d75565b60006040518083038185875af1925050503d8060008114610517576040519150601f19603f3d011682016040523d82523d6000602084013e61051c565b606091505b5050905080610560576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055790610dd6565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610647576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106ca57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610680575b5050505050905060005b81518110156107555760008282815181106106f2576106f1610c6e565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061074d90610ccc565b9150506106d4565b50600067ffffffffffffffff81111561077157610770610d15565b5b60405190808252806020026020018201604052801561079f5781602001602082028036833780820191505090505b50600090805190602001906107b5929190610989565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107dc90610d75565b60006040518083038185875af1925050503d8060008114610819576040519150601f19603f3d011682016040523d82523d6000602084013e61081e565b606091505b5050905080610862576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085990610dd6565b60405180910390fd5b5050565b600080828154811061087b5761087a610c6e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108b9836108e9565b90506000670de0b6b3a764000085836108d29190610df6565b6108dc9190610e7f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093257600080fd5b505afa158015610946573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096a9190610f3d565b5050509150506402540be400816109819190610fb8565b915050919050565b828054828255906000526020600020908101928215610a02579160200282015b82811115610a015782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109a9565b5b509050610a0f9190610a13565b5090565b5b80821115610a2c576000816000905550600101610a14565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6082610a35565b9050919050565b610a7081610a55565b8114610a7b57600080fd5b50565b600081359050610a8d81610a67565b92915050565b600060208284031215610aa957610aa8610a30565b5b6000610ab784828501610a7e565b91505092915050565b6000819050919050565b610ad381610ac0565b82525050565b6000602082019050610aee6000830184610aca565b92915050565b610afd81610a55565b82525050565b6000602082019050610b186000830184610af4565b92915050565b6000819050919050565b6000610b43610b3e610b3984610a35565b610b1e565b610a35565b9050919050565b6000610b5582610b28565b9050919050565b6000610b6782610b4a565b9050919050565b610b7781610b5c565b82525050565b6000602082019050610b926000830184610b6e565b92915050565b610ba181610ac0565b8114610bac57600080fd5b50565b600081359050610bbe81610b98565b92915050565b600060208284031215610bda57610bd9610a30565b5b6000610be884828501610baf565b91505092915050565b600082825260208201905092915050565b7f6469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610c38601283610bf1565b9150610c4382610c02565b602082019050919050565b60006020820190508181036000830152610c6781610c2b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cd782610ac0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d0a57610d09610c9d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d5f600083610d44565b9150610d6a82610d4f565b600082019050919050565b6000610d8082610d52565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610dc0600b83610bf1565b9150610dcb82610d8a565b602082019050919050565b60006020820190508181036000830152610def81610db3565b9050919050565b6000610e0182610ac0565b9150610e0c83610ac0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e4557610e44610c9d565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e8a82610ac0565b9150610e9583610ac0565b925082610ea557610ea4610e50565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ecf81610eb0565b8114610eda57600080fd5b50565b600081519050610eec81610ec6565b92915050565b6000819050919050565b610f0581610ef2565b8114610f1057600080fd5b50565b600081519050610f2281610efc565b92915050565b600081519050610f3781610b98565b92915050565b600080600080600060a08688031215610f5957610f58610a30565b5b6000610f6788828901610edd565b9550506020610f7888828901610f13565b9450506040610f8988828901610f28565b9350506060610f9a88828901610f28565b9250506080610fab88828901610edd565b9150509295509295909350565b6000610fc382610ef2565b9150610fce83610ef2565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561100d5761100c610c9d565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561104a57611049610c9d565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561108757611086610c9d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110c4576110c3610c9d565b5b82820290509291505056fea264697066735822122023f248725f7a97e8be21f8d4482dfa481e48d9852e7a9b8cbd702e3e445ca7cc64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a93565b6102da565b6040516100cc9190610ad9565b60405180910390f35b6100dd610323565b005b3480156100eb57600080fd5b506100f4610563565b6040516101019190610ad9565b60405180910390f35b34801561011657600080fd5b5061011f610570565b60405161012c9190610b03565b60405180910390f35b34801561014157600080fd5b5061014a610598565b6040516101579190610b7d565b60405180910390f35b6101686101b1565b005b6101726105c2565b005b34801561018057600080fd5b5061019b60048036038101906101969190610bc4565b610866565b6040516101a89190610b03565b60405180910390f35b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108ad90919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c4e565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a8576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104535760008082815481106103cd576103cc610c6e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061044b90610ccc565b9150506103ab565b50600067ffffffffffffffff81111561046f5761046e610d15565b5b60405190808252806020026020018201604052801561049d5781602001602082028036833780820191505090505b50600090805190602001906104b3929190610989565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104da90610d75565b60006040518083038185875af1925050503d8060008114610517576040519150601f19603f3d011682016040523d82523d6000602084013e61051c565b606091505b5050905080610560576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055790610dd6565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610647576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106ca57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610680575b5050505050905060005b81518110156107555760008282815181106106f2576106f1610c6e565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061074d90610ccc565b9150506106d4565b50600067ffffffffffffffff81111561077157610770610d15565b5b60405190808252806020026020018201604052801561079f5781602001602082028036833780820191505090505b50600090805190602001906107b5929190610989565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107dc90610d75565b60006040518083038185875af1925050503d8060008114610819576040519150601f19603f3d011682016040523d82523d6000602084013e61081e565b606091505b5050905080610862576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085990610dd6565b60405180910390fd5b5050565b600080828154811061087b5761087a610c6e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108b9836108e9565b90506000670de0b6b3a764000085836108d29190610df6565b6108dc9190610e7f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093257600080fd5b505afa158015610946573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096a9190610f3d565b5050509150506402540be400816109819190610fb8565b915050919050565b828054828255906000526020600020908101928215610a02579160200282015b82811115610a015782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109a9565b5b509050610a0f9190610a13565b5090565b5b80821115610a2c576000816000905550600101610a14565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6082610a35565b9050919050565b610a7081610a55565b8114610a7b57600080fd5b50565b600081359050610a8d81610a67565b92915050565b600060208284031215610aa957610aa8610a30565b5b6000610ab784828501610a7e565b91505092915050565b6000819050919050565b610ad381610ac0565b82525050565b6000602082019050610aee6000830184610aca565b92915050565b610afd81610a55565b82525050565b6000602082019050610b186000830184610af4565b92915050565b6000819050919050565b6000610b43610b3e610b3984610a35565b610b1e565b610a35565b9050919050565b6000610b5582610b28565b9050919050565b6000610b6782610b4a565b9050919050565b610b7781610b5c565b82525050565b6000602082019050610b926000830184610b6e565b92915050565b610ba181610ac0565b8114610bac57600080fd5b50565b600081359050610bbe81610b98565b92915050565b600060208284031215610bda57610bd9610a30565b5b6000610be884828501610baf565b91505092915050565b600082825260208201905092915050565b7f6469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610c38601283610bf1565b9150610c4382610c02565b602082019050919050565b60006020820190508181036000830152610c6781610c2b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cd782610ac0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d0a57610d09610c9d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d5f600083610d44565b9150610d6a82610d4f565b600082019050919050565b6000610d8082610d52565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610dc0600b83610bf1565b9150610dcb82610d8a565b602082019050919050565b60006020820190508181036000830152610def81610db3565b9050919050565b6000610e0182610ac0565b9150610e0c83610ac0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e4557610e44610c9d565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e8a82610ac0565b9150610e9583610ac0565b925082610ea557610ea4610e50565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ecf81610eb0565b8114610eda57600080fd5b50565b600081519050610eec81610ec6565b92915050565b6000819050919050565b610f0581610ef2565b8114610f1057600080fd5b50565b600081519050610f2281610efc565b92915050565b600081519050610f3781610b98565b92915050565b600080600080600060a08688031215610f5957610f58610a30565b5b6000610f6788828901610edd565b9550506020610f7888828901610f13565b9450506040610f8988828901610f28565b9350506060610f9a88828901610f28565b9250506080610fab88828901610edd565b9150509295509295909350565b6000610fc382610ef2565b9150610fce83610ef2565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561100d5761100c610c9d565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561104a57611049610c9d565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561108757611086610c9d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110c4576110c3610c9d565b5b82820290509291505056fea264697066735822122023f248725f7a97e8be21f8d4482dfa481e48d9852e7a9b8cbd702e3e445ca7cc64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}